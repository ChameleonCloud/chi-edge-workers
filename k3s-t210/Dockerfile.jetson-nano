FROM balenalib/jetson-nano-ubuntu:bionic-build-20220320 as build

ARG K3S_VERSION=v1.22.5%2Bk3s1

COPY install-k3s.sh /docker/install-k3s.sh
RUN /docker/install-k3s.sh %%BALENA_ARCH%%

FROM balenalib/jetson-nano-ubuntu:bionic-run-20220320 as run
RUN install_packages nvidia-container-runtime cuda-toolkit-10-2

# Download and install BSP binaries for L4T 32.6.1
RUN install_packages wget tar lbzip2 python3 libegl1 && \
    wget https://developer.nvidia.com/embedded/l4t/r32_release_v6.1/t210/jetson-210_linux_r32.6.1_aarch64.tbz2 && \
    tar xf jetson-210_linux_r32.6.1_aarch64.tbz2 && \
    cd Linux_for_Tegra && \
    sed -i 's/config.tbz2\"/config.tbz2\" --exclude=etc\/hosts --exclude=etc\/hostname/g' apply_binaries.sh && \
    sed -i 's/install --owner=root --group=root \"${QEMU_BIN}\" \"${L4T_ROOTFS_DIR}\/usr\/bin\/\"/#install --owner=root --group=root \"${QEMU_BIN}\" \"${L4T_ROOTFS_DIR}\/usr\/bin\/\"/g' nv_tegra/nv-apply-debs.sh && \
    sed -i 's/LC_ALL=C chroot . mount -t proc none \/proc/ /g' nv_tegra/nv-apply-debs.sh && \
    sed -i 's/umount ${L4T_ROOTFS_DIR}\/proc/ /g' nv_tegra/nv-apply-debs.sh && \
    sed -i 's/chroot . \//  /g' nv_tegra/nv-apply-debs.sh && \
    ./apply_binaries.sh -r / --target-overlay && cd .. \
    rm -rf jetson-210_linux_r32.6.1_aarch64.tbz2 && \
    rm -rf Linux_for_Tegra && \
    echo "/usr/lib/aarch64-linux-gnu/tegra" > /etc/ld.so.conf.d/nvidia-tegra.conf && ldconfig

COPY --from=build /usr/local/bin/k3s /usr/local/bin/k3s

# Override default containerd config.toml with template file.
# Copied from https://github.com/k3s-io/k3s/blob/master/pkg/agent/templates/templates_linux.go
COPY config.toml.tmpl /var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl

COPY start.sh /docker/start.sh
CMD ["/docker/start.sh"]
